import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import Card from "components/card";
import { getAuth, signOut } from "firebase/auth";

import { GetServerSidePropsContext } from "next";

import { useEffect } from "react";
import executeQuery from "lib/db";

export type Item = {
    code_iso: string;
    countryOrigin: string;
    createdAt: string; //date
    id: number; // ?? string ?
    image: string;
    name: string;
    notes: null | string;
    strength: number;
    type: string; // перевести в типы whiskey rome  итд
    updatedAt: string; //date
    user: string;
};

const Home: NextPage<{ bottles: Item[]; ctx: any }> = ({
    bottles = [],
    ctx,
}) => {
    // console.log("props ***", ctx);
    // useEffect(() => {
    //     (async () => {
    //         try {
    //             const result = await executeQuery({
    //                 query: "SELECT * FROM users",
    //                 values: [],
    //             });

    //             console.log(result);
    //         } catch (error) {
    //             console.log("sql connect error", error);
    //         }
    //     })();
    // }, []);
    return (
        <div className={styles.container}>
            <Head>
                <title>Welcome to GHT-BAR</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="p-8">
                <div className="flex flex-wrap gap-8 justify-center">
                    {bottles.map((bottle: Item) => {
                        return <Card key={bottle.id.toString()} {...bottle} />;
                    })}
                </div>
            </div>
        </div>
    );
};

export default Home;

export async function getServerSideProps(context: GetServerSidePropsContext) {
    let bottles = {};
    const query = context.query;

    try {
        const result = await executeQuery(getQuery(query));

        bottles = JSON.parse(JSON.stringify(result));
    } catch (error) {
        console.log("sql connection error", error);
    }

    return {
        props: { bottles }, // will be passed to the page component as props
    };
}

const getQuery = (query: GetServerSidePropsContext["query"]) => {
    if (query.country) {
        return queryGetByCountry(query.country);
    }

    return queryGetAll();
};

const queryGetAll = () => ({
    query: "SELECT * FROM ght_bar.items",
    values: [],
});

const queryGetByCountry = (country: string | any) => ({
    query: `SELECT * FROM ght_bar.items where countryOrigin = '${country}';`,
    values: [],
});
